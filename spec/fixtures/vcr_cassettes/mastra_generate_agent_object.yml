---
http_interactions:
- request:
    method: post
    uri: https://mastra.local.factorial.dev/api/agents/marvin/generate
    body:
      encoding: UTF-8
      string: '{"messages":[{"role":"user","content":"Hello!"}],"maxRetries":2,"maxSteps":5,"runtimeContext":{},"output":{"type":"object","properties":{"name":{"type":"string"},"age":{"type":"integer"}},"required":["name","age"],"additionalProperties":false}}'
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - mastra.local.factorial.dev
      Content-Type:
      - text/plain;charset=UTF-8
  response:
    status:
      code: 200
      message: OK
    headers:
      Access-Control-Allow-Credentials:
      - 'true'
      Access-Control-Expose-Headers:
      - Content-Length,X-Requested-With
      Content-Type:
      - application/json
      Date:
      - Mon, 09 Jun 2025 12:47:07 GMT
      Vary:
      - Origin
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Mon, 09 Jun 2025 12:47:07 GMT
recorded_with: VCR 6.3.1
